query getArtifactsByType($organizationId: ID!, $artifactType: String!) {
  artifacts(organizationId: $organizationId, input: {filter: {type: $artifactType}}) {
    next
    items {
      id
      name
    }
  }
}

query projects($organizationId: ID!){
  projects(organizationId: $organizationId){
    name
    id
    slug
    description
    defaultParams
    environments{
      name
      slug
    }
    cost{
      monthly{
        average{
          amount
        }
      }
      daily{
        average{
          amount
        }
      }
    }
  }
}

query getProjectById($organizationId: ID!, $id: ID!) {
  project(organizationId: $organizationId, id: $id) {
    id, name, defaultParams, slug, description
  }
}

query getDeploymentById($organizationId: ID!, $id: ID!) {
  deployment(organizationId: $organizationId, id: $id) {
    id
    status
  }
}

mutation deployPreviewEnvironment($organizationId: ID!, $projectId: ID!, $input: PreviewEnvironmentInput!) {
  deployPreviewEnvironment(projectId: $projectId, organizationId: $organizationId, input: $input) {
    successful
    result {
      id
      slug
      project{
        id
        slug
      }
    }
    # @genqlient(typename: "MutationValidationError")
    messages {
      message
    }
  }
}

query getPackageByNamingConvention($organizationId: ID!, $name: String!) {
  getPackageByNamingConvention(organizationId: $organizationId, name: $name) {
    id
    namePrefix
    params
    manifest {
      id
      bundle{
        name
      }
    }
    activeDeployment {
      id
      status
    }
    environment {
      id
      slug
      project {
        id
        slug
      }
    }
  }
}

mutation deployPackage($organizationId: ID!, $targetId: ID!, $manifestId: ID!, $message: String!) {
  deployPackage(organizationId: $organizationId, manifestId: $manifestId, targetId: $targetId, message: $message) {
    successful
    result {
      id
    }
    # @genqlient(typename: "MutationValidationError")
    messages {
      message
    }
  }
}

mutation configurePackage($organizationId: ID!, $targetId: ID!, $manifestId: ID!, $params: JSON!) {
  configurePackage(organizationId: $organizationId, targetId: $targetId, manifestId: $manifestId, params: $params) {
    result {
      id
      params
      namePrefix
    }
    successful
    # @genqlient(typename: "MutationValidationError")
    messages {
      message
    }
  }
}

mutation decommissionPreviewEnvironment($orgId: ID!, $targetId: ID!) {
  decommissionPreviewEnvironment(organizationId: $orgId, targetId: $targetId) {
    result {
      id
      slug
      project{
        id
        slug
      }
    }
    successful
    # @genqlient(typename: "MutationValidationError")
    messages {
      message
    }
  }
}

query containerRepository($orgId: ID!, $artifactId: ID!, $input: ContainerRepositoryInput!) {
  containerRepository(organizationId: $orgId, artifactId: $artifactId, input: $input) {
    token, repoUri
  }
}

mutation createArtifact($organizationId: ID!, $artifactName: String!, $artifactSpecs: JSON!, $artifactType: String! $artifactData: JSON!) {
  createArtifact(
    organizationId: $organizationId,
    name: $artifactName,
    specs: $artifactSpecs,
    type: $artifactType,
    data: $artifactData
  ) {
    result {
      name
      id
    }
    successful
    # @genqlient(typename: "MutationValidationError")
    messages {
      message
    }
  }
}

query listArtifactDefinitions($organizationId: ID!) {
  artifactDefinitions(organizationId: $organizationId) {
    id
    schema
    name
    icon
    label
    updatedAt
    url
    ui {
      connectionOrientation
      environmentDefaultGroup
    }
  }
}
